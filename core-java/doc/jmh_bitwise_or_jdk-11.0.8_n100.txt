# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 0.00% complete, ETA 00:02:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 44114.627 ms/op
# Warmup Iteration   2: 45642.740 ms/op
Iteration   1: 32241.331 ms/op
Iteration   2: 30455.495 ms/op
Iteration   3: 31712.251 ms/op
Iteration   4: 32805.338 ms/op
Iteration   5: 32104.221 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray":
  31863.727 ±(99.9%) 3386.112 ms/op [Average]
  (min, avg, max) = (30455.495, 31863.727, 32805.338), stdev = 879.363
  CI (99.9%): [28477.615, 35249.839] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        260,787.99 msec task-clock                #    0.992 CPUs utilized          
            11,833      context-switches          #    0.045 K/sec                  
               284      cpu-migrations            #    0.001 K/sec                  
            41,001      page-faults               #    0.157 K/sec                  
 1,130,131,728,396      cycles                    #    4.334 GHz                      (30.77%)
   835,505,323,012      instructions              #    0.74  insn per cycle           (38.48%)
   128,492,276,980      branches                  #  492.708 M/sec                    (38.51%)
       396,781,633      branch-misses             #    0.31% of all branches          (38.53%)
   185,479,768,020      L1-dcache-loads           #  711.228 M/sec                    (38.54%)
   108,450,537,691      L1-dcache-load-misses     #   58.47% of all L1-dcache hits    (38.51%)
    94,438,755,279      LLC-loads                 #  362.128 M/sec                    (30.76%)
       289,702,112      LLC-load-misses           #    0.31% of all LL-cache hits     (30.74%)
   <not supported>      L1-icache-loads                                             
        39,157,851      L1-icache-load-misses                                         (30.73%)
   185,867,797,100      dTLB-loads                #  712.716 M/sec                    (30.73%)
    29,726,162,685      dTLB-load-misses          #   15.99% of all dTLB cache hits   (30.73%)
         1,004,053      iTLB-loads                #    0.004 M/sec                    (30.74%)
           684,325      iTLB-load-misses          #   68.16% of all iTLB cache hits   (30.73%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     262.992779879 seconds time elapsed

     262.268926000 seconds user
       2.120791000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 5.56% complete, ETA 01:14:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 43081.297 ms/op
# Warmup Iteration   2: 44181.880 ms/op
Iteration   1: 33208.785 ms/op
Iteration   2: 33142.764 ms/op
Iteration   3: 31640.169 ms/op
Iteration   4: 31591.737 ms/op
Iteration   5: 32268.592 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray":
  32370.409 ±(99.9%) 3013.208 ms/op [Average]
  (min, avg, max) = (31591.737, 32370.409, 33208.785), stdev = 782.520
  CI (99.9%): [29357.202, 35383.617] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        260,751.21 msec task-clock                #    0.992 CPUs utilized          
            11,943      context-switches          #    0.046 K/sec                  
               193      cpu-migrations            #    0.001 K/sec                  
            41,090      page-faults               #    0.158 K/sec                  
 1,109,556,190,310      cycles                    #    4.255 GHz                      (30.76%)
   836,417,504,840      instructions              #    0.75  insn per cycle           (38.46%)
   128,760,401,340      branches                  #  493.806 M/sec                    (38.49%)
       395,632,810      branch-misses             #    0.31% of all branches          (38.51%)
   185,494,031,136      L1-dcache-loads           #  711.383 M/sec                    (38.53%)
   109,286,606,223      L1-dcache-load-misses     #   58.92% of all L1-dcache hits    (38.51%)
    94,816,190,740      LLC-loads                 #  363.627 M/sec                    (30.78%)
       290,201,527      LLC-load-misses           #    0.31% of all LL-cache hits     (30.76%)
   <not supported>      L1-icache-loads                                             
        45,281,813      L1-icache-load-misses                                         (30.74%)
   186,106,847,936      dTLB-loads                #  713.733 M/sec                    (30.73%)
    30,733,600,887      dTLB-load-misses          #   16.51% of all dTLB cache hits   (30.73%)
         1,035,415      iTLB-loads                #    0.004 M/sec                    (30.73%)
           785,154      iTLB-load-misses          #   75.83% of all iTLB cache hits   (30.73%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     262.906572693 seconds time elapsed

     262.245117000 seconds user
       2.164262000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 11.11% complete, ETA 01:10:10
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 43560.348 ms/op
# Warmup Iteration   2: 40689.133 ms/op
Iteration   1: 30955.904 ms/op
Iteration   2: 32883.557 ms/op
Iteration   3: 31381.829 ms/op
Iteration   4: 30315.614 ms/op
Iteration   5: 30061.126 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray":
  31119.606 ±(99.9%) 4293.884 ms/op [Average]
  (min, avg, max) = (30061.126, 31119.606, 32883.557), stdev = 1115.108
  CI (99.9%): [26825.722, 35413.490] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        251,889.07 msec task-clock                #    0.991 CPUs utilized          
            11,716      context-switches          #    0.047 K/sec                  
               160      cpu-migrations            #    0.001 K/sec                  
            40,981      page-faults               #    0.163 K/sec                  
 1,081,136,414,426      cycles                    #    4.292 GHz                      (30.73%)
   831,593,059,749      instructions              #    0.77  insn per cycle           (38.43%)
   124,837,762,851      branches                  #  495.606 M/sec                    (38.48%)
       395,094,974      branch-misses             #    0.32% of all branches          (38.50%)
   186,203,528,989      L1-dcache-loads           #  739.228 M/sec                    (38.52%)
   109,607,046,349      L1-dcache-load-misses     #   58.86% of all L1-dcache hits    (38.53%)
    94,490,705,031      LLC-loads                 #  375.128 M/sec                    (30.79%)
       290,398,056      LLC-load-misses           #    0.31% of all LL-cache hits     (30.77%)
   <not supported>      L1-icache-loads                                             
        48,892,411      L1-icache-load-misses                                         (30.76%)
   186,140,024,693      dTLB-loads                #  738.976 M/sec                    (30.74%)
    30,758,887,865      dTLB-load-misses          #   16.52% of all dTLB cache hits   (30.73%)
         1,035,740      iTLB-loads                #    0.004 M/sec                    (30.73%)
           659,082      iTLB-load-misses          #   63.63% of all iTLB cache hits   (30.72%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     254.107224494 seconds time elapsed

     253.473636000 seconds user
       2.041226000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBitsets = 100)

# Run progress: 16.67% complete, ETA 01:05:03
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 37265.916 ms/op
# Warmup Iteration   2: 37520.146 ms/op
Iteration   1: 36102.965 ms/op
Iteration   2: 37558.544 ms/op
Iteration   3: 37510.774 ms/op
Iteration   4: 37640.522 ms/op
Iteration   5: 38103.061 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArray":
  37383.173 ±(99.9%) 2901.068 ms/op [Average]
  (min, avg, max) = (36102.965, 37383.173, 38103.061), stdev = 753.398
  CI (99.9%): [34482.105, 40284.241] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        273,428.51 msec task-clock                #    0.992 CPUs utilized          
            12,259      context-switches          #    0.045 K/sec                  
               347      cpu-migrations            #    0.001 K/sec                  
            40,872      page-faults               #    0.149 K/sec                  
 1,188,082,885,216      cycles                    #    4.345 GHz                      (30.74%)
   843,259,635,944      instructions              #    0.71  insn per cycle           (38.47%)
   122,528,686,036      branches                  #  448.120 M/sec                    (38.50%)
       394,643,709      branch-misses             #    0.32% of all branches          (38.51%)
   164,883,968,233      L1-dcache-loads           #  603.024 M/sec                    (38.52%)
   113,325,951,500      L1-dcache-load-misses     #   68.73% of all L1-dcache hits    (38.52%)
    98,071,217,490      LLC-loads                 #  358.672 M/sec                    (30.76%)
       249,285,905      LLC-load-misses           #    0.25% of all LL-cache hits     (30.75%)
   <not supported>      L1-icache-loads                                             
        44,491,515      L1-icache-load-misses                                         (30.75%)
   165,022,255,300      dTLB-loads                #  603.530 M/sec                    (30.74%)
    34,320,435,255      dTLB-load-misses          #   20.80% of all dTLB cache hits   (30.74%)
         1,033,085      iTLB-loads                #    0.004 M/sec                    (30.74%)
           787,715      iTLB-load-misses          #   76.25% of all iTLB cache hits   (30.73%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     275.649795918 seconds time elapsed

     274.873304000 seconds user
       2.203904000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 22.22% complete, ETA 01:01:38
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 10150.167 ms/op
# Warmup Iteration   2: 10320.738 ms/op
Iteration   1: 9731.815 ms/op
Iteration   2: 10193.653 ms/op
Iteration   3: 9986.913 ms/op
Iteration   4: 9923.168 ms/op
Iteration   5: 9991.595 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel":
  9965.429 ±(99.9%) 637.378 ms/op [Average]
  (min, avg, max) = (9731.815, 9965.429, 10193.653), stdev = 165.525
  CI (99.9%): [9328.051, 10602.807] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        469,800.74 msec task-clock                #    5.588 CPUs utilized          
             8,838      context-switches          #    0.019 K/sec                  
               656      cpu-migrations            #    0.001 K/sec                  
            42,381      page-faults               #    0.090 K/sec                  
 1,599,067,650,355      cycles                    #    3.404 GHz                      (30.75%)
   820,115,119,383      instructions              #    0.51  insn per cycle           (38.44%)
   128,415,624,364      branches                  #  273.341 M/sec                    (38.46%)
       395,689,013      branch-misses             #    0.31% of all branches          (38.48%)
   212,109,544,548      L1-dcache-loads           #  451.488 M/sec                    (38.50%)
   111,526,582,006      L1-dcache-load-misses     #   52.58% of all L1-dcache hits    (38.50%)
    92,490,782,874      LLC-loads                 #  196.872 M/sec                    (30.79%)
       301,155,392      LLC-load-misses           #    0.33% of all LL-cache hits     (30.77%)
   <not supported>      L1-icache-loads                                             
        57,390,516      L1-icache-load-misses                                         (30.76%)
   212,645,222,557      dTLB-loads                #  452.629 M/sec                    (30.76%)
    37,098,499,271      dTLB-load-misses          #   17.45% of all dTLB cache hits   (30.75%)
         1,013,905      iTLB-loads                #    0.002 M/sec                    (30.74%)
           725,022      iTLB-load-misses          #   71.51% of all iTLB cache hits   (30.75%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      84.073969738 seconds time elapsed

     471.348988000 seconds user
       1.976527000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 27.78% complete, ETA 00:49:26
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 13059.432 ms/op
# Warmup Iteration   2: 13145.007 ms/op
Iteration   1: 13277.775 ms/op
Iteration   2: 13392.702 ms/op
Iteration   3: 13380.851 ms/op
Iteration   4: 13329.214 ms/op
Iteration   5: 13488.705 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel":
  13373.849 ±(99.9%) 303.315 ms/op [Average]
  (min, avg, max) = (13277.775, 13373.849, 13488.705), stdev = 78.770
  CI (99.9%): [13070.534, 13677.164] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

      1,091,197.71 msec task-clock                #   10.201 CPUs utilized          
            67,597      context-switches          #    0.062 K/sec                  
             4,159      cpu-migrations            #    0.004 K/sec                  
            47,029      page-faults               #    0.043 K/sec                  
 3,622,166,540,504      cycles                    #    3.319 GHz                      (30.77%)
   798,300,352,404      instructions              #    0.22  insn per cycle           (38.47%)
   121,839,282,827      branches                  #  111.656 M/sec                    (38.48%)
       406,436,310      branch-misses             #    0.33% of all branches          (38.48%)
   212,476,209,531      L1-dcache-loads           #  194.718 M/sec                    (38.47%)
   110,594,058,544      L1-dcache-load-misses     #   52.05% of all L1-dcache hits    (38.47%)
    89,778,482,709      LLC-loads                 #   82.275 M/sec                    (30.75%)
       269,479,829      LLC-load-misses           #    0.30% of all LL-cache hits     (30.75%)
   <not supported>      L1-icache-loads                                             
       100,602,575      L1-icache-load-misses                                         (30.75%)
   212,626,708,702      dTLB-loads                #  194.856 M/sec                    (30.76%)
    58,349,709,595      dTLB-load-misses          #   27.44% of all dTLB cache hits   (30.77%)
           989,756      iTLB-loads                #    0.907 K/sec                    (30.78%)
         1,246,847      iTLB-load-misses          #  125.98% of all iTLB cache hits   (30.78%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     106.966246905 seconds time elapsed

    1092.421399000 seconds user
       2.428159000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 33.33% complete, ETA 00:41:36
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 13195.505 ms/op
# Warmup Iteration   2: 13232.305 ms/op
Iteration   1: 13286.966 ms/op
Iteration   2: 13275.482 ms/op
Iteration   3: 13352.547 ms/op
Iteration   4: 13300.438 ms/op
Iteration   5: 13320.735 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel":
  13307.234 ±(99.9%) 117.125 ms/op [Average]
  (min, avg, max) = (13275.482, 13307.234, 13352.547), stdev = 30.417
  CI (99.9%): [13190.109, 13424.358] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

      1,105,683.59 msec task-clock                #   10.227 CPUs utilized          
           117,245      context-switches          #    0.106 K/sec                  
             4,430      cpu-migrations            #    0.004 K/sec                  
            50,644      page-faults               #    0.046 K/sec                  
 3,686,892,409,676      cycles                    #    3.334 GHz                      (30.73%)
   814,683,859,664      instructions              #    0.22  insn per cycle           (38.43%)
   122,098,351,371      branches                  #  110.428 M/sec                    (38.45%)
       408,578,204      branch-misses             #    0.33% of all branches          (38.46%)
   209,272,004,822      L1-dcache-loads           #  189.269 M/sec                    (38.48%)
   110,732,543,493      L1-dcache-load-misses     #   52.91% of all L1-dcache hits    (38.49%)
    91,295,030,007      LLC-loads                 #   82.569 M/sec                    (30.79%)
       273,304,938      LLC-load-misses           #    0.30% of all LL-cache hits     (30.79%)
   <not supported>      L1-icache-loads                                             
       120,168,801      L1-icache-load-misses                                         (30.78%)
   209,211,976,905      dTLB-loads                #  189.215 M/sec                    (30.77%)
    58,901,403,154      dTLB-load-misses          #   28.15% of all dTLB cache hits   (30.76%)
           866,635      iTLB-loads                #    0.784 K/sec                    (30.75%)
         2,001,001      iTLB-load-misses          #  230.89% of all iTLB cache hits   (30.74%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     108.110522445 seconds time elapsed

    1107.052430000 seconds user
       2.364644000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 38.89% complete, ETA 00:35:31
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 394.113 ms/op
# Warmup Iteration   2: 372.009 ms/op
Iteration   1: 374.385 ms/op
Iteration   2: 374.800 ms/op
Iteration   3: 375.881 ms/op
Iteration   4: 374.245 ms/op
Iteration   5: 373.803 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray":
  374.623 ±(99.9%) 3.035 ms/op [Average]
  (min, avg, max) = (373.803, 374.623, 375.881), stdev = 0.788
  CI (99.9%): [371.588, 377.658] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         22,284.69 msec task-clock                #    0.957 CPUs utilized          
             4,044      context-switches          #    0.181 K/sec                  
               120      cpu-migrations            #    0.005 K/sec                  
            56,821      page-faults               #    0.003 M/sec                  
    86,770,879,750      cycles                    #    3.894 GHz                      (30.92%)
   110,294,013,114      instructions              #    1.27  insn per cycle           (38.67%)
    19,493,578,682      branches                  #  874.752 M/sec                    (38.87%)
        12,397,113      branch-misses             #    0.06% of all branches          (38.80%)
    24,574,192,840      L1-dcache-loads           # 1102.739 M/sec                    (38.82%)
     3,773,116,254      L1-dcache-load-misses     #   15.35% of all L1-dcache hits    (38.64%)
     2,011,565,890      LLC-loads                 #   90.267 M/sec                    (30.70%)
       478,484,640      LLC-load-misses           #   23.79% of all LL-cache hits     (30.60%)
   <not supported>      L1-icache-loads                                             
        10,993,735      L1-icache-load-misses                                         (30.47%)
    24,796,381,675      dTLB-loads                # 1112.709 M/sec                    (30.44%)
        39,190,932      dTLB-load-misses          #    0.16% of all dTLB cache hits   (30.43%)
           197,831      iTLB-loads                #    0.009 M/sec                    (30.61%)
         1,136,465      iTLB-load-misses          #  574.46% of all iTLB cache hits   (30.71%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      23.281768862 seconds time elapsed

      23.221894000 seconds user
       2.589235000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 44.44% complete, ETA 00:28:45
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 368.897 ms/op
# Warmup Iteration   2: 351.956 ms/op
Iteration   1: 348.803 ms/op
Iteration   2: 349.901 ms/op
Iteration   3: 350.718 ms/op
Iteration   4: 348.368 ms/op
Iteration   5: 352.701 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray":
  350.098 ±(99.9%) 6.633 ms/op [Average]
  (min, avg, max) = (348.368, 350.098, 352.701), stdev = 1.723
  CI (99.9%): [343.465, 356.731] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         21,352.46 msec task-clock                #    0.950 CPUs utilized          
             3,903      context-switches          #    0.183 K/sec                  
                94      cpu-migrations            #    0.004 K/sec                  
            56,946      page-faults               #    0.003 M/sec                  
    86,125,784,253      cycles                    #    4.034 GHz                      (30.38%)
   112,177,779,989      instructions              #    1.30  insn per cycle           (38.18%)
    19,787,517,362      branches                  #  926.709 M/sec                    (38.45%)
        12,660,165      branch-misses             #    0.06% of all branches          (38.77%)
    24,561,736,529      L1-dcache-loads           # 1150.300 M/sec                    (39.08%)
     3,723,362,216      L1-dcache-load-misses     #   15.16% of all L1-dcache hits    (39.17%)
     2,003,266,512      LLC-loads                 #   93.819 M/sec                    (31.19%)
       457,806,679      LLC-load-misses           #   22.85% of all LL-cache hits     (30.97%)
   <not supported>      L1-icache-loads                                             
         9,811,068      L1-icache-load-misses                                         (30.65%)
    24,938,270,975      dTLB-loads                # 1167.934 M/sec                    (30.46%)
        36,464,197      dTLB-load-misses          #    0.15% of all dTLB cache hits   (30.36%)
           191,465      iTLB-loads                #    0.009 M/sec                    (30.26%)
         1,304,263      iTLB-load-misses          #  681.20% of all iTLB cache hits   (30.27%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      22.485056239 seconds time elapsed

      22.207431000 seconds user
       2.660772000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 50.00% complete, ETA 00:23:23
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 352.120 ms/op
# Warmup Iteration   2: 332.578 ms/op
Iteration   1: 332.264 ms/op
Iteration   2: 331.934 ms/op
Iteration   3: 331.393 ms/op
Iteration   4: 343.747 ms/op
Iteration   5: 341.242 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray":
  336.116 ±(99.9%) 22.711 ms/op [Average]
  (min, avg, max) = (331.393, 336.116, 343.747), stdev = 5.898
  CI (99.9%): [313.405, 358.827] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         21,633.52 msec task-clock                #    0.966 CPUs utilized          
             4,542      context-switches          #    0.210 K/sec                  
               114      cpu-migrations            #    0.005 K/sec                  
            56,768      page-faults               #    0.003 M/sec                  
    93,241,678,266      cycles                    #    4.310 GHz                      (30.15%)
   114,148,258,734      instructions              #    1.22  insn per cycle           (38.18%)
    19,785,603,994      branches                  #  914.581 M/sec                    (38.47%)
        15,622,283      branch-misses             #    0.08% of all branches          (38.94%)
    25,923,215,697      L1-dcache-loads           # 1198.289 M/sec                    (39.16%)
     4,358,703,083      L1-dcache-load-misses     #   16.81% of all L1-dcache hits    (39.41%)
     2,325,599,761      LLC-loads                 #  107.500 M/sec                    (31.37%)
       571,339,061      LLC-load-misses           #   24.57% of all LL-cache hits     (30.99%)
   <not supported>      L1-icache-loads                                             
        11,613,649      L1-icache-load-misses                                         (30.83%)
    26,277,036,432      dTLB-loads                # 1214.645 M/sec                    (30.45%)
        36,698,100      dTLB-load-misses          #    0.14% of all dTLB cache hits   (30.17%)
           208,032      iTLB-loads                #    0.010 M/sec                    (30.07%)
         1,498,082      iTLB-load-misses          #  720.12% of all iTLB cache hits   (30.01%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      22.395667731 seconds time elapsed

      22.433253000 seconds user
       2.729368000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 55.56% complete, ETA 00:19:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 533.179 ms/op
# Warmup Iteration   2: 496.093 ms/op
Iteration   1: 493.304 ms/op
Iteration   2: 500.414 ms/op
Iteration   3: 494.363 ms/op
Iteration   4: 498.596 ms/op
Iteration   5: 492.813 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel":
  495.898 ±(99.9%) 13.098 ms/op [Average]
  (min, avg, max) = (492.813, 495.898, 500.414), stdev = 3.402
  CI (99.9%): [482.800, 508.996] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

         80,402.02 msec task-clock                #    3.446 CPUs utilized          
             6,013      context-switches          #    0.075 K/sec                  
               543      cpu-migrations            #    0.007 K/sec                  
            71,882      page-faults               #    0.894 K/sec                  
   291,978,479,836      cycles                    #    3.631 GHz                      (30.50%)
   109,544,847,018      instructions              #    0.38  insn per cycle           (38.27%)
    19,583,878,542      branches                  #  243.574 M/sec                    (38.50%)
        15,935,299      branch-misses             #    0.08% of all branches          (38.61%)
    23,969,478,390      L1-dcache-loads           #  298.120 M/sec                    (38.72%)
     3,456,834,186      L1-dcache-load-misses     #   14.42% of all L1-dcache hits    (38.76%)
     2,251,472,378      LLC-loads                 #   28.003 M/sec                    (30.95%)
     1,910,334,038      LLC-load-misses           #   84.85% of all LL-cache hits     (30.94%)
   <not supported>      L1-icache-loads                                             
        22,760,807      L1-icache-load-misses                                         (30.86%)
    23,740,908,281      dTLB-loads                #  295.277 M/sec                    (30.74%)
        44,879,878      dTLB-load-misses          #    0.19% of all dTLB cache hits   (30.55%)
           326,837      iTLB-loads                #    0.004 M/sec                    (30.45%)
         1,356,465      iTLB-load-misses          #  415.03% of all iTLB cache hits   (30.42%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      23.332490668 seconds time elapsed

      81.123294000 seconds user
       2.784154000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 61.11% complete, ETA 00:15:22
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 551.975 ms/op
# Warmup Iteration   2: 505.379 ms/op
Iteration   1: 508.140 ms/op
Iteration   2: 507.325 ms/op
Iteration   3: 500.337 ms/op
Iteration   4: 501.383 ms/op
Iteration   5: 497.966 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel":
  503.030 ±(99.9%) 17.239 ms/op [Average]
  (min, avg, max) = (497.966, 503.030, 508.140), stdev = 4.477
  CI (99.9%): [485.791, 520.269] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        100,466.80 msec task-clock                #    4.387 CPUs utilized          
            10,498      context-switches          #    0.104 K/sec                  
             1,039      cpu-migrations            #    0.010 K/sec                  
            48,471      page-faults               #    0.482 K/sec                  
   362,032,871,476      cycles                    #    3.604 GHz                      (30.83%)
   104,665,509,713      instructions              #    0.29  insn per cycle           (38.58%)
    15,909,339,044      branches                  #  158.354 M/sec                    (38.71%)
        13,867,959      branch-misses             #    0.09% of all branches          (38.63%)
    23,425,642,803      L1-dcache-loads           #  233.168 M/sec                    (38.47%)
     2,910,074,669      L1-dcache-load-misses     #   12.42% of all L1-dcache hits    (38.34%)
     1,800,446,777      LLC-loads                 #   17.921 M/sec                    (30.57%)
     1,553,070,474      LLC-load-misses           #   86.26% of all LL-cache hits     (30.69%)
   <not supported>      L1-icache-loads                                             
        37,382,809      L1-icache-load-misses                                         (30.78%)
    23,002,816,773      dTLB-loads                #  228.959 M/sec                    (30.82%)
        41,313,100      dTLB-load-misses          #    0.18% of all dTLB cache hits   (30.72%)
           640,122      iTLB-loads                #    0.006 M/sec                    (30.68%)
         1,697,808      iTLB-load-misses          #  265.23% of all iTLB cache hits   (30.74%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      22.900902703 seconds time elapsed

     101.252621000 seconds user
       2.755012000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 66.67% complete, ETA 00:12:16
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 537.162 ms/op
# Warmup Iteration   2: 475.707 ms/op
Iteration   1: 472.775 ms/op
Iteration   2: 474.221 ms/op
Iteration   3: 464.506 ms/op
Iteration   4: 470.938 ms/op
Iteration   5: 464.206 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel":
  469.329 ±(99.9%) 18.050 ms/op [Average]
  (min, avg, max) = (464.206, 469.329, 474.221), stdev = 4.688
  CI (99.9%): [451.279, 487.380] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        118,887.76 msec task-clock                #    4.933 CPUs utilized          
            16,297      context-switches          #    0.137 K/sec                  
             1,432      cpu-migrations            #    0.012 K/sec                  
            71,136      page-faults               #    0.598 K/sec                  
   423,237,947,215      cycles                    #    3.560 GHz                      (30.39%)
   107,329,387,026      instructions              #    0.25  insn per cycle           (38.26%)
    15,935,787,937      branches                  #  134.041 M/sec                    (38.56%)
        19,926,924      branch-misses             #    0.13% of all branches          (38.77%)
    24,614,008,252      L1-dcache-loads           #  207.036 M/sec                    (38.88%)
     3,677,555,321      L1-dcache-load-misses     #   14.94% of all L1-dcache hits    (38.87%)
     2,233,934,123      LLC-loads                 #   18.790 M/sec                    (30.97%)
     1,848,286,993      LLC-load-misses           #   82.74% of all LL-cache hits     (30.94%)
   <not supported>      L1-icache-loads                                             
        38,572,415      L1-icache-load-misses                                         (30.86%)
    24,266,145,824      dTLB-loads                #  204.110 M/sec                    (30.75%)
        46,653,435      dTLB-load-misses          #    0.19% of all dTLB cache hits   (30.47%)
           966,267      iTLB-loads                #    0.008 M/sec                    (30.29%)
         2,009,644      iTLB-load-misses          #  207.98% of all iTLB cache hits   (30.26%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      24.101650793 seconds time elapsed

     119.480118000 seconds user
       2.987294000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 72.22% complete, ETA 00:09:35
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 568.215 ms/op
# Warmup Iteration   2: 540.678 ms/op
Iteration   1: 542.755 ms/op
Iteration   2: 546.218 ms/op
Iteration   3: 546.167 ms/op
Iteration   4: 542.841 ms/op
Iteration   5: 543.278 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray":
  544.252 ±(99.9%) 6.865 ms/op [Average]
  (min, avg, max) = (542.755, 544.252, 546.218), stdev = 1.783
  CI (99.9%): [537.387, 551.116] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         20,892.95 msec task-clock                #    0.925 CPUs utilized          
             3,260      context-switches          #    0.156 K/sec                  
               123      cpu-migrations            #    0.006 K/sec                  
            41,255      page-faults               #    0.002 M/sec                  
    85,526,062,326      cycles                    #    4.094 GHz                      (30.72%)
   103,915,001,185      instructions              #    1.22  insn per cycle           (38.57%)
    15,867,293,881      branches                  #  759.457 M/sec                    (38.80%)
        12,269,907      branch-misses             #    0.08% of all branches          (39.06%)
    22,102,192,406      L1-dcache-loads           # 1057.878 M/sec                    (39.14%)
     2,523,564,649      L1-dcache-load-misses     #   11.42% of all L1-dcache hits    (38.85%)
     1,555,251,423      LLC-loads                 #   74.439 M/sec                    (30.86%)
       665,668,262      LLC-load-misses           #   42.80% of all LL-cache hits     (30.60%)
   <not supported>      L1-icache-loads                                             
         7,168,116      L1-icache-load-misses                                         (30.56%)
    22,539,939,944      dTLB-loads                # 1078.830 M/sec                    (30.43%)
        29,864,503      dTLB-load-misses          #    0.13% of all dTLB cache hits   (30.34%)
           127,214      iTLB-loads                #    0.006 M/sec                    (30.34%)
           900,368      iTLB-load-misses          #  707.76% of all iTLB cache hits   (30.30%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      22.590666798 seconds time elapsed

      22.052224000 seconds user
       2.288658000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 77.78% complete, ETA 00:07:14
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 588.041 ms/op
# Warmup Iteration   2: 549.711 ms/op
Iteration   1: 544.544 ms/op
Iteration   2: 546.714 ms/op
Iteration   3: 548.300 ms/op
Iteration   4: 544.589 ms/op
Iteration   5: 543.417 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray":
  545.513 ±(99.9%) 7.555 ms/op [Average]
  (min, avg, max) = (543.417, 545.513, 548.300), stdev = 1.962
  CI (99.9%): [537.958, 553.067] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         21,564.27 msec task-clock                #    0.928 CPUs utilized          
             3,052      context-switches          #    0.142 K/sec                  
               119      cpu-migrations            #    0.006 K/sec                  
            56,141      page-faults               #    0.003 M/sec                  
    85,192,702,535      cycles                    #    3.951 GHz                      (30.62%)
   107,891,072,455      instructions              #    1.27  insn per cycle           (38.51%)
    19,650,481,610      branches                  #  911.252 M/sec                    (38.92%)
        13,630,318      branch-misses             #    0.07% of all branches          (39.17%)
    22,055,602,056      L1-dcache-loads           # 1022.784 M/sec                    (39.26%)
     2,515,491,696      L1-dcache-load-misses     #   11.41% of all L1-dcache hits    (39.00%)
     1,569,253,854      LLC-loads                 #   72.771 M/sec                    (30.68%)
       656,555,340      LLC-load-misses           #   41.84% of all LL-cache hits     (30.45%)
   <not supported>      L1-icache-loads                                             
         6,461,572      L1-icache-load-misses                                         (30.41%)
    22,512,622,001      dTLB-loads                # 1043.978 M/sec                    (30.39%)
        29,621,323      dTLB-load-misses          #    0.13% of all dTLB cache hits   (30.40%)
           355,516      iTLB-loads                #    0.016 M/sec                    (30.38%)
           844,303      iTLB-load-misses          #  237.49% of all iTLB cache hits   (30.34%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      23.240686584 seconds time elapsed

      22.764994000 seconds user
       2.267968000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 83.33% complete, ETA 00:05:08
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 564.616 ms/op
# Warmup Iteration   2: 540.974 ms/op
Iteration   1: 543.861 ms/op
Iteration   2: 543.430 ms/op
Iteration   3: 544.784 ms/op
Iteration   4: 543.094 ms/op
Iteration   5: 543.403 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray":
  543.714 ±(99.9%) 2.532 ms/op [Average]
  (min, avg, max) = (543.094, 543.714, 544.784), stdev = 0.658
  CI (99.9%): [541.183, 546.246] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         20,478.83 msec task-clock                #    0.922 CPUs utilized          
             3,000      context-switches          #    0.146 K/sec                  
                85      cpu-migrations            #    0.004 K/sec                  
            41,254      page-faults               #    0.002 M/sec                  
    85,689,382,137      cycles                    #    4.184 GHz                      (30.54%)
   103,770,031,063      instructions              #    1.21  insn per cycle           (38.41%)
    15,800,876,470      branches                  #  771.571 M/sec                    (38.78%)
        11,898,283      branch-misses             #    0.08% of all branches          (38.93%)
    22,053,424,000      L1-dcache-loads           # 1076.889 M/sec                    (39.12%)
     2,523,421,125      L1-dcache-load-misses     #   11.44% of all L1-dcache hits    (38.95%)
     1,573,757,867      LLC-loads                 #   76.848 M/sec                    (30.91%)
       651,408,471      LLC-load-misses           #   41.39% of all LL-cache hits     (30.86%)
   <not supported>      L1-icache-loads                                             
         8,687,522      L1-icache-load-misses                                         (30.79%)
    22,370,704,610      dTLB-loads                # 1092.382 M/sec                    (30.51%)
        29,958,467      dTLB-load-misses          #    0.13% of all dTLB cache hits   (30.32%)
           187,949      iTLB-loads                #    0.009 M/sec                    (30.22%)
           805,416      iTLB-load-misses          #  428.53% of all iTLB cache hits   (30.10%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      22.208648172 seconds time elapsed

      21.591420000 seconds user
       2.325540000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithBitSet
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBitsets = 100)

# Run progress: 88.89% complete, ETA 00:03:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 546.857 ms/op
# Warmup Iteration   2: 541.282 ms/op
Iteration   1: 540.618 ms/op
Iteration   2: 548.587 ms/op
Iteration   3: 541.356 ms/op
Iteration   4: 544.336 ms/op
Iteration   5: 539.753 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithBitSet":
  542.930 ±(99.9%) 13.869 ms/op [Average]
  (min, avg, max) = (539.753, 542.930, 548.587), stdev = 3.602
  CI (99.9%): [529.061, 556.799] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithBitSet:·perf":
Perf stats:
--------------------------------------------------

         26,342.40 msec task-clock                #    1.110 CPUs utilized          
            14,109      context-switches          #    0.536 K/sec                  
               214      cpu-migrations            #    0.008 K/sec                  
         1,191,467      page-faults               #    0.045 M/sec                  
   110,127,612,923      cycles                    #    4.181 GHz                      (30.52%)
   124,126,293,232      instructions              #    1.13  insn per cycle           (38.59%)
    21,375,987,101      branches                  #  811.467 M/sec                    (38.88%)
        34,390,422      branch-misses             #    0.16% of all branches          (39.09%)
    24,403,099,469      L1-dcache-loads           #  926.381 M/sec                    (39.48%)
     2,802,567,831      L1-dcache-load-misses     #   11.48% of all L1-dcache hits    (39.24%)
     1,580,132,716      LLC-loads                 #   59.984 M/sec                    (30.85%)
       640,811,753      LLC-load-misses           #   40.55% of all LL-cache hits     (30.63%)
   <not supported>      L1-icache-loads                                             
        28,718,951      L1-icache-load-misses                                         (30.38%)
    25,466,064,118      dTLB-loads                #  966.733 M/sec                    (30.24%)
        36,299,757      dTLB-load-misses          #    0.14% of all dTLB cache hits   (30.27%)
           444,264      iTLB-loads                #    0.017 M/sec                    (30.28%)
         5,177,160      iTLB-load-misses          # 1165.33% of all iTLB cache hits   (30.14%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      23.734129292 seconds time elapsed

      25.576850000 seconds user
       4.870131000 seconds sys




# JMH version: 1.22
# VM version: JDK 11.0.8, Java HotSpot(TM) 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /opt/jdks/jdk-11.0.8/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBitsets = 100)

# Run progress: 94.44% complete, ETA 00:01:33
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 569.831 ms/op
# Warmup Iteration   2: 545.255 ms/op
Iteration   1: 548.503 ms/op
Iteration   2: 546.345 ms/op
Iteration   3: 544.487 ms/op
Iteration   4: 546.949 ms/op
Iteration   5: 547.480 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithByteArray":
  546.753 ±(99.9%) 5.754 ms/op [Average]
  (min, avg, max) = (544.487, 546.753, 548.503), stdev = 1.494
  CI (99.9%): [540.999, 552.507] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         20,325.17 msec task-clock                #    0.921 CPUs utilized          
             2,918      context-switches          #    0.144 K/sec                  
                71      cpu-migrations            #    0.003 K/sec                  
            40,964      page-faults               #    0.002 M/sec                  
    85,476,162,818      cycles                    #    4.205 GHz                      (30.47%)
   103,437,992,652      instructions              #    1.21  insn per cycle           (38.39%)
    15,772,414,498      branches                  #  776.004 M/sec                    (38.59%)
         9,553,469      branch-misses             #    0.06% of all branches          (38.91%)
    21,926,970,531      L1-dcache-loads           # 1078.809 M/sec                    (39.07%)
     2,518,174,994      L1-dcache-load-misses     #   11.48% of all L1-dcache hits    (38.99%)
     1,574,471,511      LLC-loads                 #   77.464 M/sec                    (30.91%)
       656,100,842      LLC-load-misses           #   41.67% of all LL-cache hits     (30.91%)
   <not supported>      L1-icache-loads                                             
         8,177,383      L1-icache-load-misses                                         (30.79%)
    22,336,272,566      dTLB-loads                # 1098.946 M/sec                    (30.55%)
        29,988,373      dTLB-load-misses          #    0.13% of all dTLB cache hits   (30.50%)
           142,054      iTLB-loads                #    0.007 M/sec                    (30.18%)
           749,254      iTLB-load-misses          #  527.44% of all iTLB cache hits   (30.15%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      22.073686386 seconds time elapsed

      21.602184000 seconds user
       2.200110000 seconds sys




# Run complete. Total time: 00:26:52

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (bitsetLength)  (bitsetPoolSize)  (nBatches)  (nBitsets)  Mode  Cnt      Score      Error  Units
BitwiseOrBenchmark.columnWiseBatchWithByteArray                   436465696               100           8         100  avgt    5  31863.727 ± 3386.112  ms/op
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·cpi              436465696               100           8         100  avgt           1.353               CPI
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf             436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseBatchWithByteArray                   436465696               100          16         100  avgt    5  32370.409 ± 3013.208  ms/op
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·cpi              436465696               100          16         100  avgt           1.327               CPI
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf             436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseBatchWithByteArray                   436465696               100          32         100  avgt    5  31119.606 ± 4293.884  ms/op
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·cpi              436465696               100          32         100  avgt           1.300               CPI
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf             436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArray                        436465696               100         N/A         100  avgt    5  37383.173 ± 2901.068  ms/op
BitwiseOrBenchmark.columnWiseWithByteArray:·cpi                   436465696               100         N/A         100  avgt           1.409               CPI
BitwiseOrBenchmark.columnWiseWithByteArray:·perf                  436465696               100         N/A         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel              436465696               100           8         100  avgt    5   9965.429 ±  637.378  ms/op
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·cpi         436465696               100           8         100  avgt           1.950               CPI
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf        436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel              436465696               100          16         100  avgt    5  13373.849 ±  303.315  ms/op
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·cpi         436465696               100          16         100  avgt           4.537               CPI
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf        436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel              436465696               100          32         100  avgt    5  13307.234 ±  117.125  ms/op
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·cpi         436465696               100          32         100  avgt           4.526               CPI
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf        436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArray                       436465696               100           8         100  avgt    5    374.623 ±    3.035  ms/op
BitwiseOrBenchmark.customBatchWithByteArray:·cpi                  436465696               100           8         100  avgt           0.787               CPI
BitwiseOrBenchmark.customBatchWithByteArray:·perf                 436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArray                       436465696               100          16         100  avgt    5    350.098 ±    6.633  ms/op
BitwiseOrBenchmark.customBatchWithByteArray:·cpi                  436465696               100          16         100  avgt           0.768               CPI
BitwiseOrBenchmark.customBatchWithByteArray:·perf                 436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArray                       436465696               100          32         100  avgt    5    336.116 ±   22.711  ms/op
BitwiseOrBenchmark.customBatchWithByteArray:·cpi                  436465696               100          32         100  avgt           0.817               CPI
BitwiseOrBenchmark.customBatchWithByteArray:·perf                 436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArrayInParallel             436465696               100           8         100  avgt    5    495.898 ±   13.098  ms/op
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·cpi        436465696               100           8         100  avgt           2.665               CPI
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf       436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArrayInParallel             436465696               100          16         100  avgt    5    503.030 ±   17.239  ms/op
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·cpi        436465696               100          16         100  avgt           3.459               CPI
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf       436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArrayInParallel             436465696               100          32         100  avgt    5    469.329 ±   18.050  ms/op
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·cpi        436465696               100          32         100  avgt           3.943               CPI
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf       436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseBatchWithByteArray                      436465696               100           8         100  avgt    5    544.252 ±    6.865  ms/op
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·cpi                 436465696               100           8         100  avgt           0.823               CPI
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf                436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseBatchWithByteArray                      436465696               100          16         100  avgt    5    545.513 ±    7.555  ms/op
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·cpi                 436465696               100          16         100  avgt           0.790               CPI
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf                436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseBatchWithByteArray                      436465696               100          32         100  avgt    5    543.714 ±    2.532  ms/op
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·cpi                 436465696               100          32         100  avgt           0.826               CPI
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf                436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseWithBitSet                              436465696               100         N/A         100  avgt    5    542.930 ±   13.869  ms/op
BitwiseOrBenchmark.rowWiseWithBitSet:·cpi                         436465696               100         N/A         100  avgt           0.887               CPI
BitwiseOrBenchmark.rowWiseWithBitSet:·perf                        436465696               100         N/A         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseWithByteArray                           436465696               100         N/A         100  avgt    5    546.753 ±    5.754  ms/op
BitwiseOrBenchmark.rowWiseWithByteArray:·cpi                      436465696               100         N/A         100  avgt           0.826               CPI
BitwiseOrBenchmark.rowWiseWithByteArray:·perf                     436465696               100         N/A         100  avgt             NaN               ---
