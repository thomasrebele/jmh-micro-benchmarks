# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 0.00% complete, ETA 00:02:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 17124.018 ms/op
# Warmup Iteration   2: 16912.397 ms/op
Iteration   1: 17415.271 ms/op
Iteration   2: 16871.098 ms/op
Iteration   3: 16143.553 ms/op
Iteration   4: 16089.701 ms/op
Iteration   5: 16686.294 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray":
  16641.183 ±(99.9%) 2114.243 ms/op [Average]
  (min, avg, max) = (16089.701, 16641.183, 17415.271), stdev = 549.062
  CI (99.9%): [14526.941, 18755.426] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        131,671.96 msec task-clock                #    1.006 CPUs utilized          
             3,635      context-switches          #    0.028 K/sec                  
                86      cpu-migrations            #    0.001 K/sec                  
           241,000      page-faults               #    0.002 M/sec                  
   559,690,991,280      cycles                    #    4.251 GHz                      (30.74%)
   932,836,548,519      instructions              #    1.67  insn per cycle           (38.44%)
   151,945,638,517      branches                  # 1153.971 M/sec                    (38.46%)
       390,735,287      branch-misses             #    0.26% of all branches          (38.47%)
   151,400,767,779      L1-dcache-loads           # 1149.833 M/sec                    (38.48%)
     1,018,568,184      L1-dcache-load-misses     #    0.67% of all L1-dcache hits    (38.49%)
       364,546,195      LLC-loads                 #    2.769 M/sec                    (30.78%)
       314,650,736      LLC-load-misses           #   86.31% of all LL-cache hits     (30.79%)
   <not supported>      L1-icache-loads                                             
        25,270,416      L1-icache-load-misses                                         (30.79%)
   151,196,116,660      dTLB-loads                # 1148.279 M/sec                    (30.78%)
        18,003,974      dTLB-load-misses          #    0.01% of all dTLB cache hits   (30.76%)
           481,444      iTLB-loads                #    0.004 M/sec                    (30.74%)
           302,224      iTLB-load-misses          #   62.77% of all iTLB cache hits   (30.73%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     130.826655936 seconds time elapsed

     137.368014000 seconds user
       2.702244000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 5.56% complete, ETA 00:37:05
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 18319.257 ms/op
# Warmup Iteration   2: 18057.579 ms/op
Iteration   1: 16732.694 ms/op
Iteration   2: 15691.103 ms/op
Iteration   3: 15791.103 ms/op
Iteration   4: 16196.550 ms/op
Iteration   5: 15781.907 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray":
  16038.671 ±(99.9%) 1672.500 ms/op [Average]
  (min, avg, max) = (15691.103, 16038.671, 16732.694), stdev = 434.343
  CI (99.9%): [14366.172, 17711.171] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        131,898.78 msec task-clock                #    1.006 CPUs utilized          
             3,730      context-switches          #    0.028 K/sec                  
                61      cpu-migrations            #    0.000 K/sec                  
           261,650      page-faults               #    0.002 M/sec                  
   539,529,984,742      cycles                    #    4.090 GHz                      (30.74%)
   886,811,502,920      instructions              #    1.64  insn per cycle           (38.44%)
   152,946,843,873      branches                  # 1159.577 M/sec                    (38.47%)
       390,171,127      branch-misses             #    0.26% of all branches          (38.49%)
   149,622,560,451      L1-dcache-loads           # 1134.374 M/sec                    (38.50%)
     1,142,673,819      L1-dcache-load-misses     #    0.76% of all L1-dcache hits    (38.49%)
       371,039,252      LLC-loads                 #    2.813 M/sec                    (30.77%)
       317,914,999      LLC-load-misses           #   85.68% of all LL-cache hits     (30.76%)
   <not supported>      L1-icache-loads                                             
        28,558,901      L1-icache-load-misses                                         (30.79%)
   149,392,617,741      dTLB-loads                # 1132.631 M/sec                    (30.77%)
       373,176,459      dTLB-load-misses          #    0.25% of all dTLB cache hits   (30.76%)
           745,945      iTLB-loads                #    0.006 M/sec                    (30.75%)
           265,430      iTLB-load-misses          #   35.58% of all iTLB cache hits   (30.71%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     131.047426001 seconds time elapsed

     137.602578000 seconds user
       2.804379000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 11.11% complete, ETA 00:34:58
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 17675.309 ms/op
# Warmup Iteration   2: 17625.484 ms/op
Iteration   1: 17514.808 ms/op
Iteration   2: 17552.666 ms/op
Iteration   3: 17468.557 ms/op
Iteration   4: 17945.902 ms/op
Iteration   5: 17544.617 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray":
  17605.310 ±(99.9%) 744.057 ms/op [Average]
  (min, avg, max) = (17468.557, 17605.310, 17945.902), stdev = 193.229
  CI (99.9%): [16861.253, 18349.368] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        138,301.69 msec task-clock                #    1.006 CPUs utilized          
             3,562      context-switches          #    0.026 K/sec                  
                54      cpu-migrations            #    0.000 K/sec                  
           261,410      page-faults               #    0.002 M/sec                  
   540,301,235,649      cycles                    #    3.907 GHz                      (30.76%)
   885,495,918,063      instructions              #    1.64  insn per cycle           (38.48%)
   152,779,891,058      branches                  # 1104.686 M/sec                    (38.49%)
       389,761,805      branch-misses             #    0.26% of all branches          (38.50%)
   149,403,651,864      L1-dcache-loads           # 1080.274 M/sec                    (38.51%)
       956,504,816      L1-dcache-load-misses     #    0.64% of all L1-dcache hits    (38.49%)
       364,730,475      LLC-loads                 #    2.637 M/sec                    (30.76%)
       315,198,507      LLC-load-misses           #   86.42% of all LL-cache hits     (30.75%)
   <not supported>      L1-icache-loads                                             
        21,152,600      L1-icache-load-misses                                         (30.75%)
   149,229,460,017      dTLB-loads                # 1079.014 M/sec                    (30.75%)
        20,180,788      dTLB-load-misses          #    0.01% of all dTLB cache hits   (30.75%)
           552,871      iTLB-loads                #    0.004 M/sec                    (30.75%)
           530,850      iTLB-load-misses          #   96.02% of all iTLB cache hits   (30.75%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     137.464293323 seconds time elapsed

     144.152539000 seconds user
       2.635978000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBitsets = 100)

# Run progress: 16.67% complete, ETA 00:33:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 16468.081 ms/op
# Warmup Iteration   2: 16773.605 ms/op
Iteration   1: 14870.422 ms/op
Iteration   2: 15192.107 ms/op
Iteration   3: 14822.377 ms/op
Iteration   4: 15463.155 ms/op
Iteration   5: 15303.959 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArray":
  15130.404 ±(99.9%) 1066.988 ms/op [Average]
  (min, avg, max) = (14822.377, 15130.404, 15463.155), stdev = 277.093
  CI (99.9%): [14063.416, 16197.392] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArray:·perf":
Perf stats:
--------------------------------------------------

        153,989.61 msec task-clock                #    1.118 CPUs utilized          
             3,886      context-switches          #    0.025 K/sec                  
                44      cpu-migrations            #    0.000 K/sec                  
           246,457      page-faults               #    0.002 M/sec                  
   659,981,001,133      cycles                    #    4.286 GHz                      (30.75%)
   965,230,195,270      instructions              #    1.46  insn per cycle           (38.46%)
   178,183,656,862      branches                  # 1157.115 M/sec                    (38.45%)
       534,132,708      branch-misses             #    0.30% of all branches          (38.46%)
   175,779,532,121      L1-dcache-loads           # 1141.503 M/sec                    (38.48%)
     1,232,214,182      L1-dcache-load-misses     #    0.70% of all L1-dcache hits    (38.47%)
       416,796,025      LLC-loads                 #    2.707 M/sec                    (30.77%)
       363,416,115      LLC-load-misses           #   87.19% of all LL-cache hits     (30.78%)
   <not supported>      L1-icache-loads                                             
        21,009,512      L1-icache-load-misses                                         (30.77%)
   175,496,957,062      dTLB-loads                # 1139.667 M/sec                    (30.77%)
        52,549,574      dTLB-load-misses          #    0.03% of all dTLB cache hits   (30.78%)
           667,757      iTLB-loads                #    0.004 M/sec                    (30.76%)
        30,196,385      iTLB-load-misses          # 4522.06% of all iTLB cache hits   (30.74%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

     137.779420926 seconds time elapsed

     153.480042000 seconds user
       8.988722000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 22.22% complete, ETA 00:31:23
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3692.690 ms/op
# Warmup Iteration   2: 3627.930 ms/op
Iteration   1: 3722.052 ms/op
Iteration   2: 3712.518 ms/op
Iteration   3: 3654.502 ms/op
Iteration   4: 3740.045 ms/op
Iteration   5: 3689.416 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel":
  3703.707 ±(99.9%) 127.129 ms/op [Average]
  (min, avg, max) = (3654.502, 3703.707, 3740.045), stdev = 33.015
  CI (99.9%): [3576.578, 3830.836] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        191,470.03 msec task-clock                #    4.884 CPUs utilized          
             2,642      context-switches          #    0.014 K/sec                  
               153      cpu-migrations            #    0.001 K/sec                  
             1,332      page-faults               #    0.007 K/sec                  
   640,473,246,493      cycles                    #    3.345 GHz                      (30.78%)
   895,886,618,567      instructions              #    1.40  insn per cycle           (38.50%)
   152,001,627,255      branches                  #  793.866 M/sec                    (38.55%)
       404,174,065      branch-misses             #    0.27% of all branches          (38.57%)
   143,388,076,274      L1-dcache-loads           #  748.880 M/sec                    (38.56%)
     1,575,392,171      L1-dcache-load-misses     #    1.10% of all L1-dcache hits    (38.53%)
       326,947,400      LLC-loads                 #    1.708 M/sec                    (30.76%)
       291,907,754      LLC-load-misses           #   89.28% of all LL-cache hits     (30.72%)
   <not supported>      L1-icache-loads                                             
        23,606,977      L1-icache-load-misses                                         (30.70%)
   143,312,149,918      dTLB-loads                #  748.483 M/sec                    (30.69%)
       349,775,148      dTLB-load-misses          #    0.24% of all dTLB cache hits   (30.69%)
           701,023      iTLB-loads                #    0.004 M/sec                    (30.71%)
         5,216,382      iTLB-load-misses          #  744.11% of all iTLB cache hits   (30.74%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      39.200152028 seconds time elapsed

     195.269240000 seconds user
       3.933029000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 27.78% complete, ETA 00:25:01
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3837.150 ms/op
# Warmup Iteration   2: 3505.012 ms/op
Iteration   1: 3231.350 ms/op
Iteration   2: 3205.105 ms/op
Iteration   3: 3351.429 ms/op
Iteration   4: 3225.885 ms/op
Iteration   5: 3703.433 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel":
  3343.440 ±(99.9%) 805.830 ms/op [Average]
  (min, avg, max) = (3205.105, 3343.440, 3703.433), stdev = 209.272
  CI (99.9%): [2537.610, 4149.271] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        267,367.88 msec task-clock                #    7.012 CPUs utilized          
            14,955      context-switches          #    0.056 K/sec                  
             1,066      cpu-migrations            #    0.004 K/sec                  
           242,938      page-faults               #    0.909 K/sec                  
   864,931,712,704      cycles                    #    3.235 GHz                      (30.77%)
   902,807,365,108      instructions              #    1.04  insn per cycle           (38.45%)
   153,869,030,156      branches                  #  575.496 M/sec                    (38.42%)
       399,587,621      branch-misses             #    0.26% of all branches          (38.42%)
   144,180,636,512      L1-dcache-loads           #  539.259 M/sec                    (38.41%)
     3,940,306,893      L1-dcache-load-misses     #    2.73% of all L1-dcache hits    (38.43%)
       397,610,397      LLC-loads                 #    1.487 M/sec                    (30.76%)
       316,747,568      LLC-load-misses           #   79.66% of all LL-cache hits     (30.77%)
   <not supported>      L1-icache-loads                                             
        34,216,362      L1-icache-load-misses                                         (30.79%)
   144,042,598,132      dTLB-loads                #  538.743 M/sec                    (30.79%)
     2,040,442,687      dTLB-load-misses          #    1.42% of all dTLB cache hits   (30.81%)
           345,626      iTLB-loads                #    0.001 M/sec                    (30.81%)
         3,295,755      iTLB-load-misses          #  953.56% of all iTLB cache hits   (30.80%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      38.131895351 seconds time elapsed

     271.931088000 seconds user
       3.994009000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 33.33% complete, ETA 00:20:31
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3282.062 ms/op
# Warmup Iteration   2: 3406.367 ms/op
Iteration   1: 3399.211 ms/op
Iteration   2: 3392.126 ms/op
Iteration   3: 3440.441 ms/op
Iteration   4: 3938.818 ms/op
Iteration   5: 3480.920 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel":
  3530.303 ±(99.9%) 889.982 ms/op [Average]
  (min, avg, max) = (3392.126, 3530.303, 3938.818), stdev = 231.125
  CI (99.9%): [2640.322, 4420.285] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        291,018.53 msec task-clock                #    7.498 CPUs utilized          
            27,538      context-switches          #    0.095 K/sec                  
             1,723      cpu-migrations            #    0.006 K/sec                  
           245,181      page-faults               #    0.842 K/sec                  
   926,921,587,376      cycles                    #    3.185 GHz                      (30.72%)
   934,384,234,514      instructions              #    1.01  insn per cycle           (38.42%)
   153,076,389,150      branches                  #  526.002 M/sec                    (38.46%)
       396,403,247      branch-misses             #    0.26% of all branches          (38.49%)
   161,188,979,473      L1-dcache-loads           #  553.879 M/sec                    (38.52%)
     3,902,497,122      L1-dcache-load-misses     #    2.42% of all L1-dcache hits    (38.56%)
       405,162,800      LLC-loads                 #    1.392 M/sec                    (30.83%)
       315,975,876      LLC-load-misses           #   77.99% of all LL-cache hits     (30.79%)
   <not supported>      L1-icache-loads                                             
        38,144,034      L1-icache-load-misses                                         (30.75%)
   161,559,979,712      dTLB-loads                #  555.154 M/sec                    (30.72%)
     1,180,971,944      dTLB-load-misses          #    0.73% of all dTLB cache hits   (30.71%)
           526,984      iTLB-loads                #    0.002 M/sec                    (30.72%)
         1,913,975      iTLB-load-misses          #  363.19% of all iTLB cache hits   (30.72%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      38.811263027 seconds time elapsed

     296.663847000 seconds user
       3.084275000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 38.89% complete, ETA 00:17:09
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 551.422 ms/op
# Warmup Iteration   2: 967.668 ms/op
Iteration   1: 1195.995 ms/op
Iteration   2: 958.281 ms/op
Iteration   3: 954.664 ms/op
Iteration   4: 955.197 ms/op
Iteration   5: 951.863 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray":
  1003.200 ±(99.9%) 415.099 ms/op [Average]
  (min, avg, max) = (951.863, 1003.200, 1195.995), stdev = 107.800
  CI (99.9%): [588.101, 1418.299] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         28,973.63 msec task-clock                #    1.028 CPUs utilized          
               925      context-switches          #    0.032 K/sec                  
                27      cpu-migrations            #    0.001 K/sec                  
           260,379      page-faults               #    0.009 M/sec                  
   106,345,352,483      cycles                    #    3.670 GHz                      (30.67%)
   234,929,858,696      instructions              #    2.21  insn per cycle           (38.55%)
    34,406,000,704      branches                  # 1187.494 M/sec                    (38.70%)
         6,703,293      branch-misses             #    0.02% of all branches          (38.75%)
    46,070,362,778      L1-dcache-loads           # 1590.079 M/sec                    (38.78%)
     2,617,931,570      L1-dcache-load-misses     #    5.68% of all L1-dcache hits    (38.73%)
       125,950,180      LLC-loads                 #    4.347 M/sec                    (30.72%)
        61,346,087      LLC-load-misses           #   48.71% of all LL-cache hits     (30.69%)
   <not supported>      L1-icache-loads                                             
         4,918,343      L1-icache-load-misses                                         (30.63%)
    46,365,789,540      dTLB-loads                # 1600.276 M/sec                    (30.60%)
        38,239,617      dTLB-load-misses          #    0.08% of all dTLB cache hits   (30.58%)
            80,526      iTLB-loads                #    0.003 M/sec                    (30.56%)
           273,534      iTLB-load-misses          #  339.68% of all iTLB cache hits   (30.59%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      28.187836841 seconds time elapsed

      34.649754000 seconds user
       2.947623000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 44.44% complete, ETA 00:14:14
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 564.344 ms/op
# Warmup Iteration   2: 775.949 ms/op
Iteration   1: 777.709 ms/op
Iteration   2: 781.787 ms/op
Iteration   3: 780.991 ms/op
Iteration   4: 780.654 ms/op
Iteration   5: 993.262 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray":
  822.881 ±(99.9%) 366.807 ms/op [Average]
  (min, avg, max) = (777.709, 822.881, 993.262), stdev = 95.259
  CI (99.9%): [456.074, 1189.688] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         25,590.94 msec task-clock                #    1.027 CPUs utilized          
               865      context-switches          #    0.034 K/sec                  
                28      cpu-migrations            #    0.001 K/sec                  
           183,891      page-faults               #    0.007 M/sec                  
   107,497,120,576      cycles                    #    4.201 GHz                      (30.61%)
   243,135,741,993      instructions              #    2.26  insn per cycle           (38.38%)
    34,400,464,977      branches                  # 1344.244 M/sec                    (38.42%)
         6,486,320      branch-misses             #    0.02% of all branches          (38.55%)
    48,695,829,811      L1-dcache-loads           # 1902.854 M/sec                    (38.66%)
     2,772,629,327      L1-dcache-load-misses     #    5.69% of all L1-dcache hits    (38.56%)
       123,448,747      LLC-loads                 #    4.824 M/sec                    (30.78%)
        56,775,677      LLC-load-misses           #   45.99% of all LL-cache hits     (30.75%)
   <not supported>      L1-icache-loads                                             
         5,180,880      L1-icache-load-misses                                         (30.78%)
    48,582,460,272      dTLB-loads                # 1898.424 M/sec                    (30.84%)
        36,949,159      dTLB-load-misses          #    0.08% of all dTLB cache hits   (30.81%)
            68,793      iTLB-loads                #    0.003 M/sec                    (30.70%)
           238,836      iTLB-load-misses          #  347.18% of all iTLB cache hits   (30.56%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      24.925805108 seconds time elapsed

      30.620728000 seconds user
       2.782655000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 50.00% complete, ETA 00:11:48
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 614.104 ms/op
# Warmup Iteration   2: 863.229 ms/op
Iteration   1: 864.458 ms/op
Iteration   2: 860.848 ms/op
Iteration   3: 861.006 ms/op
Iteration   4: 861.841 ms/op
Iteration   5: 1086.770 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray":
  906.985 ±(99.9%) 387.042 ms/op [Average]
  (min, avg, max) = (860.848, 906.985, 1086.770), stdev = 100.514
  CI (99.9%): [519.943, 1294.027] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         27,133.04 msec task-clock                #    1.025 CPUs utilized          
               927      context-switches          #    0.034 K/sec                  
                25      cpu-migrations            #    0.001 K/sec                  
           183,971      page-faults               #    0.007 M/sec                  
   107,827,482,027      cycles                    #    3.974 GHz                      (30.41%)
   246,085,237,239      instructions              #    2.28  insn per cycle           (38.22%)
    35,715,399,561      branches                  # 1316.307 M/sec                    (38.41%)
         6,756,757      branch-misses             #    0.02% of all branches          (38.61%)
    48,526,951,603      L1-dcache-loads           # 1788.482 M/sec                    (38.77%)
     2,773,087,724      L1-dcache-load-misses     #    5.71% of all L1-dcache hits    (38.74%)
       113,022,496      LLC-loads                 #    4.165 M/sec                    (30.88%)
        55,925,585      LLC-load-misses           #   49.48% of all LL-cache hits     (30.86%)
   <not supported>      L1-icache-loads                                             
         4,715,104      L1-icache-load-misses                                         (30.86%)
    48,518,948,322      dTLB-loads                # 1788.187 M/sec                    (30.85%)
        22,097,668      dTLB-load-misses          #    0.05% of all dTLB cache hits   (30.71%)
            73,531      iTLB-loads                #    0.003 M/sec                    (30.53%)
           232,139      iTLB-load-misses          #  315.70% of all iTLB cache hits   (30.37%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      26.480740152 seconds time elapsed

      32.212419000 seconds user
       2.803425000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 55.56% complete, ETA 00:09:48
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 501.784 ms/op
# Warmup Iteration   2: 486.799 ms/op
Iteration   1: 640.187 ms/op
Iteration   2: 485.865 ms/op
Iteration   3: 484.568 ms/op
Iteration   4: 481.414 ms/op
Iteration   5: 481.964 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel":
  514.799 ±(99.9%) 269.999 ms/op [Average]
  (min, avg, max) = (481.414, 514.799, 640.187), stdev = 70.118
  CI (99.9%): [244.801, 784.798] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

         86,553.79 msec task-clock                #    3.609 CPUs utilized          
             1,997      context-switches          #    0.023 K/sec                  
               220      cpu-migrations            #    0.003 K/sec                  
           249,072      page-faults               #    0.003 M/sec                  
   342,333,060,548      cycles                    #    3.955 GHz                      (30.82%)
   201,682,961,965      instructions              #    0.59  insn per cycle           (38.53%)
    30,358,529,696      branches                  #  350.748 M/sec                    (38.44%)
         8,474,927      branch-misses             #    0.03% of all branches          (38.36%)
    38,313,952,674      L1-dcache-loads           #  442.661 M/sec                    (38.29%)
     3,693,827,855      L1-dcache-load-misses     #    9.64% of all L1-dcache hits    (38.29%)
       284,890,293      LLC-loads                 #    3.291 M/sec                    (30.74%)
       234,035,911      LLC-load-misses           #   82.15% of all LL-cache hits     (30.88%)
   <not supported>      L1-icache-loads                                             
        19,495,298      L1-icache-load-misses                                         (30.94%)
    37,866,107,212      dTLB-loads                #  437.486 M/sec                    (30.88%)
        53,199,887      dTLB-load-misses          #    0.14% of all dTLB cache hits   (30.82%)
           227,979      iTLB-loads                #    0.003 M/sec                    (30.76%)
           644,972      iTLB-load-misses          #  282.91% of all iTLB cache hits   (30.77%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      23.982061902 seconds time elapsed

      92.186661000 seconds user
       2.802547000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 61.11% complete, ETA 00:08:03
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 510.367 ms/op
# Warmup Iteration   2: 490.158 ms/op
Iteration   1: 715.258 ms/op
Iteration   2: 490.852 ms/op
Iteration   3: 487.537 ms/op
Iteration   4: 489.196 ms/op
Iteration   5: 490.446 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel":
  534.658 ±(99.9%) 388.788 ms/op [Average]
  (min, avg, max) = (487.537, 534.658, 715.258), stdev = 100.967
  CI (99.9%): [145.870, 923.445] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        118,946.57 msec task-clock                #    5.117 CPUs utilized          
             8,039      context-switches          #    0.068 K/sec                  
               694      cpu-migrations            #    0.006 K/sec                  
           261,581      page-faults               #    0.002 M/sec                  
   462,651,055,927      cycles                    #    3.890 GHz                      (30.55%)
   196,280,649,536      instructions              #    0.42  insn per cycle           (38.28%)
    28,523,246,200      branches                  #  239.799 M/sec                    (38.48%)
         9,001,899      branch-misses             #    0.03% of all branches          (38.61%)
    36,711,962,064      L1-dcache-loads           #  308.642 M/sec                    (38.76%)
     3,522,454,075      L1-dcache-load-misses     #    9.59% of all L1-dcache hits    (38.85%)
       258,493,879      LLC-loads                 #    2.173 M/sec                    (31.06%)
       203,481,643      LLC-load-misses           #   78.72% of all LL-cache hits     (30.92%)
   <not supported>      L1-icache-loads                                             
        19,239,398      L1-icache-load-misses                                         (30.78%)
    36,563,709,444      dTLB-loads                #  307.396 M/sec                    (30.61%)
        51,442,253      dTLB-load-misses          #    0.14% of all dTLB cache hits   (30.47%)
           691,918      iTLB-loads                #    0.006 M/sec                    (30.47%)
           918,795      iTLB-load-misses          #  132.79% of all iTLB cache hits   (30.46%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      23.243781263 seconds time elapsed

     124.772538000 seconds user
       2.907659000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 66.67% complete, ETA 00:06:31
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 472.791 ms/op
# Warmup Iteration   2: 559.360 ms/op
Iteration   1: 458.007 ms/op
Iteration   2: 456.881 ms/op
Iteration   3: 465.791 ms/op
Iteration   4: 480.025 ms/op
Iteration   5: 503.867 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel":
  472.914 ±(99.9%) 75.523 ms/op [Average]
  (min, avg, max) = (456.881, 472.914, 503.867), stdev = 19.613
  CI (99.9%): [397.392, 548.437] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf":
Perf stats:
--------------------------------------------------

        118,263.64 msec task-clock                #    5.117 CPUs utilized          
            12,806      context-switches          #    0.108 K/sec                  
             1,194      cpu-migrations            #    0.010 K/sec                  
           537,617      page-faults               #    0.005 M/sec                  
   453,880,690,510      cycles                    #    3.838 GHz                      (30.81%)
   202,386,286,379      instructions              #    0.45  insn per cycle           (38.64%)
    30,207,463,719      branches                  #  255.425 M/sec                    (38.78%)
        11,011,861      branch-misses             #    0.04% of all branches          (38.86%)
    38,377,071,887      L1-dcache-loads           #  324.504 M/sec                    (38.90%)
     3,697,704,883      L1-dcache-load-misses     #    9.64% of all L1-dcache hits    (38.83%)
       232,250,098      LLC-loads                 #    1.964 M/sec                    (30.74%)
       191,974,062      LLC-load-misses           #   82.66% of all LL-cache hits     (30.55%)
   <not supported>      L1-icache-loads                                             
        37,303,672      L1-icache-load-misses                                         (30.36%)
    38,992,959,673      dTLB-loads                #  329.712 M/sec                    (30.36%)
        48,597,776      dTLB-load-misses          #    0.12% of all dTLB cache hits   (30.49%)
           796,720      iTLB-loads                #    0.007 M/sec                    (30.59%)
         1,479,540      iTLB-load-misses          #  185.70% of all iTLB cache hits   (30.74%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      23.110416844 seconds time elapsed

     122.621541000 seconds user
       3.668742000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 8, nBitsets = 100)

# Run progress: 72.22% complete, ETA 00:05:10
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4606.817 ms/op
# Warmup Iteration   2: 4645.274 ms/op
Iteration   1: 937.246 ms/op
Iteration   2: 938.902 ms/op
Iteration   3: 1373.844 ms/op
Iteration   4: 930.923 ms/op
Iteration   5: 934.165 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray":
  1023.016 ±(99.9%) 755.276 ms/op [Average]
  (min, avg, max) = (930.923, 1023.016, 1373.844), stdev = 196.143
  CI (99.9%): [267.740, 1778.292] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         32,369.99 msec task-clock                #    1.026 CPUs utilized          
               985      context-switches          #    0.030 K/sec                  
                48      cpu-migrations            #    0.001 K/sec                  
           240,623      page-faults               #    0.007 M/sec                  
   135,792,889,032      cycles                    #    4.195 GHz                      (30.73%)
   352,022,784,253      instructions              #    2.59  insn per cycle           (38.53%)
    44,991,953,236      branches                  # 1389.928 M/sec                    (38.58%)
         6,818,610      branch-misses             #    0.02% of all branches          (38.61%)
    96,235,437,838      L1-dcache-loads           # 2972.983 M/sec                    (38.62%)
     2,102,167,808      L1-dcache-load-misses     #    2.18% of all L1-dcache hits    (38.59%)
       102,249,713      LLC-loads                 #    3.159 M/sec                    (30.70%)
        61,671,947      LLC-load-misses           #   60.32% of all LL-cache hits     (30.69%)
   <not supported>      L1-icache-loads                                             
         5,566,514      L1-icache-load-misses                                         (30.67%)
    96,194,696,983      dTLB-loads                # 2971.725 M/sec                    (30.68%)
        29,571,141      dTLB-load-misses          #    0.03% of all dTLB cache hits   (30.72%)
           240,594      iTLB-loads                #    0.007 M/sec                    (30.70%)
           327,864      iTLB-load-misses          #  136.27% of all iTLB cache hits   (30.71%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      31.541892989 seconds time elapsed

      38.253459000 seconds user
       2.627789000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 16, nBitsets = 100)

# Run progress: 77.78% complete, ETA 00:03:59
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5046.666 ms/op
# Warmup Iteration   2: 5026.850 ms/op
Iteration   1: 989.711 ms/op
Iteration   2: 988.166 ms/op
Iteration   3: 988.390 ms/op
Iteration   4: 987.208 ms/op
Iteration   5: 990.332 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray":
  988.761 ±(99.9%) 4.823 ms/op [Average]
  (min, avg, max) = (987.208, 988.761, 990.332), stdev = 1.252
  CI (99.9%): [983.939, 993.584] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         30,915.08 msec task-clock                #    0.914 CPUs utilized          
               913      context-switches          #    0.030 K/sec                  
                10      cpu-migrations            #    0.000 K/sec                  
               271      page-faults               #    0.009 K/sec                  
   123,126,721,622      cycles                    #    3.983 GHz                      (30.74%)
   359,846,623,943      instructions              #    2.92  insn per cycle           (38.47%)
    44,639,843,496      branches                  # 1443.951 M/sec                    (38.51%)
         5,466,137      branch-misses             #    0.01% of all branches          (38.55%)
    99,679,403,093      L1-dcache-loads           # 3224.297 M/sec                    (38.60%)
     2,152,275,926      L1-dcache-load-misses     #    2.16% of all L1-dcache hits    (38.53%)
        56,654,946      LLC-loads                 #    1.833 M/sec                    (30.77%)
        36,170,257      LLC-load-misses           #   63.84% of all LL-cache hits     (30.77%)
   <not supported>      L1-icache-loads                                             
         4,454,482      L1-icache-load-misses                                         (30.75%)
   100,197,336,648      dTLB-loads                # 3241.051 M/sec                    (30.74%)
        30,495,904      dTLB-load-misses          #    0.03% of all dTLB cache hits   (30.72%)
           100,828      iTLB-loads                #    0.003 M/sec                    (30.69%)
            68,652      iTLB-load-misses          #   68.09% of all iTLB cache hits   (30.65%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      33.841141030 seconds time elapsed

      36.283508000 seconds user
       2.358963000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBatches = 32, nBitsets = 100)

# Run progress: 83.33% complete, ETA 00:02:54
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5225.706 ms/op
# Warmup Iteration   2: 5212.409 ms/op
Iteration   1: 906.468 ms/op
Iteration   2: 912.045 ms/op
Iteration   3: 1138.591 ms/op
Iteration   4: 914.535 ms/op
Iteration   5: 914.951 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray":
  957.318 ±(99.9%) 390.420 ms/op [Average]
  (min, avg, max) = (906.468, 957.318, 1138.591), stdev = 101.391
  CI (99.9%): [566.898, 1347.738] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         35,184.07 msec task-clock                #    1.023 CPUs utilized          
             1,060      context-switches          #    0.030 K/sec                  
                32      cpu-migrations            #    0.001 K/sec                  
           246,318      page-faults               #    0.007 M/sec                  
   140,299,814,630      cycles                    #    3.988 GHz                      (30.72%)
   364,751,238,470      instructions              #    2.60  insn per cycle           (38.49%)
    46,548,589,255      branches                  # 1323.002 M/sec                    (38.54%)
         7,002,157      branch-misses             #    0.02% of all branches          (38.59%)
   100,182,556,890      L1-dcache-loads           # 2847.384 M/sec                    (38.61%)
     2,279,613,755      L1-dcache-load-misses     #    2.28% of all L1-dcache hits    (38.57%)
       113,833,597      LLC-loads                 #    3.235 M/sec                    (30.79%)
        69,745,498      LLC-load-misses           #   61.27% of all LL-cache hits     (30.78%)
   <not supported>      L1-icache-loads                                             
         5,955,541      L1-icache-load-misses                                         (30.73%)
   100,639,663,018      dTLB-loads                # 2860.376 M/sec                    (30.70%)
        32,466,914      dTLB-load-misses          #    0.03% of all dTLB cache hits   (30.66%)
           165,815      iTLB-loads                #    0.005 M/sec                    (30.63%)
           253,577      iTLB-load-misses          #  152.93% of all iTLB cache hits   (30.65%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      34.401184666 seconds time elapsed

      40.905123000 seconds user
       2.762306000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithBitSet
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBitsets = 100)

# Run progress: 88.89% complete, ETA 00:01:53
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 532.250 ms/op
# Warmup Iteration   2: 523.414 ms/op
Iteration   1: 780.045 ms/op
Iteration   2: 525.360 ms/op
Iteration   3: 520.598 ms/op
Iteration   4: 521.286 ms/op
Iteration   5: 521.622 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithBitSet":
  573.782 ±(99.9%) 444.055 ms/op [Average]
  (min, avg, max) = (520.598, 573.782, 780.045), stdev = 115.320
  CI (99.9%): [129.727, 1017.837] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithBitSet:·perf":
Perf stats:
--------------------------------------------------

         32,305.23 msec task-clock                #    1.306 CPUs utilized          
             1,478      context-switches          #    0.046 K/sec                  
                77      cpu-migrations            #    0.002 K/sec                  
         1,529,931      page-faults               #    0.047 M/sec                  
   132,835,949,887      cycles                    #    4.112 GHz                      (30.49%)
   143,023,564,774      instructions              #    1.08  insn per cycle           (38.31%)
    21,792,458,415      branches                  #  674.580 M/sec                    (38.41%)
        10,193,864      branch-misses             #    0.05% of all branches          (38.67%)
    23,030,329,162      L1-dcache-loads           #  712.898 M/sec                    (38.87%)
     3,193,433,592      L1-dcache-load-misses     #   13.87% of all L1-dcache hits    (38.90%)
     1,670,240,029      LLC-loads                 #   51.702 M/sec                    (31.03%)
       772,639,844      LLC-load-misses           #   46.26% of all LL-cache hits     (30.88%)
   <not supported>      L1-icache-loads                                             
        12,619,492      L1-icache-load-misses                                         (30.74%)
    23,924,158,723      dTLB-loads                #  740.566 M/sec                    (30.61%)
        36,112,031      dTLB-load-misses          #    0.15% of all dTLB cache hits   (30.56%)
           307,522      iTLB-loads                #    0.010 M/sec                    (30.45%)
         1,862,052      iTLB-load-misses          #  605.50% of all iTLB cache hits   (30.39%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      24.737723008 seconds time elapsed

      33.572118000 seconds user
       2.732641000 seconds sys




# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /opt/jdks/jdk1.8.0_261/jre/bin/java
# VM options: -Xmx16g
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithByteArray
# Parameters: (bitsetLength = 436465696, bitsetPoolSize = 100, nBitsets = 100)

# Run progress: 94.44% complete, ETA 00:00:54
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 662.719 ms/op
# Warmup Iteration   2: 963.712 ms/op
Iteration   1: 964.166 ms/op
Iteration   2: 1408.302 ms/op
Iteration   3: 967.291 ms/op
Iteration   4: 960.047 ms/op
Iteration   5: 959.603 ms/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithByteArray":
  1051.882 ±(99.9%) 767.318 ms/op [Average]
  (min, avg, max) = (959.603, 1051.882, 1408.302), stdev = 199.270
  CI (99.9%): [284.564, 1819.200] (assumes normal distribution)

Secondary result "com.github.zabetak.benchmark.BitwiseOrBenchmark.rowWiseWithByteArray:·perf":
Perf stats:
--------------------------------------------------

         27,592.72 msec task-clock                #    1.026 CPUs utilized          
               873      context-switches          #    0.032 K/sec                  
                25      cpu-migrations            #    0.001 K/sec                  
           240,603      page-faults               #    0.009 M/sec                  
   108,287,370,781      cycles                    #    3.924 GHz                      (30.48%)
   224,988,644,272      instructions              #    2.08  insn per cycle           (38.25%)
    33,214,893,953      branches                  # 1203.756 M/sec                    (38.32%)
         6,066,060      branch-misses             #    0.02% of all branches          (38.51%)
    43,446,080,421      L1-dcache-loads           # 1574.549 M/sec                    (38.68%)
     2,442,051,903      L1-dcache-load-misses     #    5.62% of all L1-dcache hits    (38.68%)
       126,339,644      LLC-loads                 #    4.579 M/sec                    (30.86%)
        80,634,585      LLC-load-misses           #   63.82% of all LL-cache hits     (30.91%)
   <not supported>      L1-icache-loads                                             
         4,898,909      L1-icache-load-misses                                         (30.89%)
    43,090,889,760      dTLB-loads                # 1561.676 M/sec                    (30.85%)
        35,264,923      dTLB-load-misses          #    0.08% of all dTLB cache hits   (30.82%)
            82,968      iTLB-loads                #    0.003 M/sec                    (30.58%)
           242,141      iTLB-load-misses          #  291.85% of all iTLB cache hits   (30.44%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

      26.881565644 seconds time elapsed

      33.366932000 seconds user
       2.620819000 seconds sys




# Run complete. Total time: 00:15:59

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (bitsetLength)  (bitsetPoolSize)  (nBatches)  (nBitsets)  Mode  Cnt      Score      Error  Units
BitwiseOrBenchmark.columnWiseBatchWithByteArray                   436465696               100           8         100  avgt    5  16641.183 ± 2114.243  ms/op
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·cpi              436465696               100           8         100  avgt           0.600               CPI
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf             436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseBatchWithByteArray                   436465696               100          16         100  avgt    5  16038.671 ± 1672.500  ms/op
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·cpi              436465696               100          16         100  avgt           0.608               CPI
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf             436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseBatchWithByteArray                   436465696               100          32         100  avgt    5  17605.310 ±  744.057  ms/op
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·cpi              436465696               100          32         100  avgt           0.610               CPI
BitwiseOrBenchmark.columnWiseBatchWithByteArray:·perf             436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArray                        436465696               100         N/A         100  avgt    5  15130.404 ± 1066.988  ms/op
BitwiseOrBenchmark.columnWiseWithByteArray:·cpi                   436465696               100         N/A         100  avgt           0.684               CPI
BitwiseOrBenchmark.columnWiseWithByteArray:·perf                  436465696               100         N/A         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel              436465696               100           8         100  avgt    5   3703.707 ±  127.129  ms/op
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·cpi         436465696               100           8         100  avgt           0.715               CPI
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf        436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel              436465696               100          16         100  avgt    5   3343.440 ±  805.830  ms/op
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·cpi         436465696               100          16         100  avgt           0.958               CPI
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf        436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel              436465696               100          32         100  avgt    5   3530.303 ±  889.982  ms/op
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·cpi         436465696               100          32         100  avgt           0.992               CPI
BitwiseOrBenchmark.columnWiseWithByteArrayInParallel:·perf        436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArray                       436465696               100           8         100  avgt    5   1003.200 ±  415.099  ms/op
BitwiseOrBenchmark.customBatchWithByteArray:·cpi                  436465696               100           8         100  avgt           0.453               CPI
BitwiseOrBenchmark.customBatchWithByteArray:·perf                 436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArray                       436465696               100          16         100  avgt    5    822.881 ±  366.807  ms/op
BitwiseOrBenchmark.customBatchWithByteArray:·cpi                  436465696               100          16         100  avgt           0.442               CPI
BitwiseOrBenchmark.customBatchWithByteArray:·perf                 436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArray                       436465696               100          32         100  avgt    5    906.985 ±  387.042  ms/op
BitwiseOrBenchmark.customBatchWithByteArray:·cpi                  436465696               100          32         100  avgt           0.438               CPI
BitwiseOrBenchmark.customBatchWithByteArray:·perf                 436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArrayInParallel             436465696               100           8         100  avgt    5    514.799 ±  269.999  ms/op
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·cpi        436465696               100           8         100  avgt           1.697               CPI
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf       436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArrayInParallel             436465696               100          16         100  avgt    5    534.658 ±  388.788  ms/op
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·cpi        436465696               100          16         100  avgt           2.357               CPI
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf       436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.customBatchWithByteArrayInParallel             436465696               100          32         100  avgt    5    472.914 ±   75.523  ms/op
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·cpi        436465696               100          32         100  avgt           2.243               CPI
BitwiseOrBenchmark.customBatchWithByteArrayInParallel:·perf       436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseBatchWithByteArray                      436465696               100           8         100  avgt    5   1023.016 ±  755.276  ms/op
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·cpi                 436465696               100           8         100  avgt           0.386               CPI
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf                436465696               100           8         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseBatchWithByteArray                      436465696               100          16         100  avgt    5    988.761 ±    4.823  ms/op
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·cpi                 436465696               100          16         100  avgt           0.342               CPI
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf                436465696               100          16         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseBatchWithByteArray                      436465696               100          32         100  avgt    5    957.318 ±  390.420  ms/op
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·cpi                 436465696               100          32         100  avgt           0.385               CPI
BitwiseOrBenchmark.rowWiseBatchWithByteArray:·perf                436465696               100          32         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseWithBitSet                              436465696               100         N/A         100  avgt    5    573.782 ±  444.055  ms/op
BitwiseOrBenchmark.rowWiseWithBitSet:·cpi                         436465696               100         N/A         100  avgt           0.929               CPI
BitwiseOrBenchmark.rowWiseWithBitSet:·perf                        436465696               100         N/A         100  avgt             NaN               ---
BitwiseOrBenchmark.rowWiseWithByteArray                           436465696               100         N/A         100  avgt    5   1051.882 ±  767.318  ms/op
BitwiseOrBenchmark.rowWiseWithByteArray:·cpi                      436465696               100         N/A         100  avgt           0.481               CPI
BitwiseOrBenchmark.rowWiseWithByteArray:·perf                     436465696               100         N/A         100  avgt             NaN               ---
